#include "drivers/mss_uart/mss_uart.h"
#include "inttypes.h"

#define CONTROLLER_DATA_REG ((uint32_t *) FPGA_FABRIC_BASE)

int main(void)
{
	uint32_t controller_buff; //holds all 32 bits of controller data

	uint8_t y_axis; //all 8 bits hold data about y_axis data from controller
	uint8_t x_axis; //all 8 bits hold data about x_axis data from controller
	uint8_t up; //1 or 0
	uint8_t down; //1 or 0
	uint8_t left; //1 or 0
	uint8_t right; //1 or 0

	uint32_t y_mask = 0xFF000000;
	uint32_t x_mask = 0x00FF0000;
	uint32_t up_mask = 0x00000010;
	uint32_t down_mask = 0x00000020;
	uint32_t left_mask = 0x00000040;
	uint32_t right_mask = 0x00000080;

	int relevant_data_bytes = 6;
	uint8_t tx_buff[relevant_data_bytes];
	int i;

	MSS_UART_init(
			&g_mss_uart1,
			MSS_UART_57600_BAUD,
			MSS_UART_DATA_8_BITS | MSS_UART_NO_PARITY | MSS_UART_ONE_STOP_BIT
	);

	while( 1 )
	{
		controller_buff = *CONTROLLER_DATA_REG;

		y_axis = (uint8_t)((controller_buff & y_mask) >> 24);
		uint8_t new_y = 0;
		for(i = 0; i < 8; i++) {
			new_y = new_y + ((0b00000001 &(y_axis>>(7-i)))<< i);
		}
		y_axis = new_y;

		x_axis = (uint8_t)((controller_buff & x_mask) >> 16);
		uint8_t new_x = 0;
		for(i = 0; i < 8; i++) {
			new_x = new_x + ((0b00000001 &(x_axis>>(7-i)))<< i);
		}
		x_axis = new_x;

		up = (uint8_t)((controller_buff & up_mask) >> 4);
		down = (uint8_t)((controller_buff & down_mask) >> 5);
		left = (uint8_t)((controller_buff & left_mask) >> 6);
		right =(uint8_t)((controller_buff & right_mask) >> 7);

		tx_buff[0] = y_axis;
		tx_buff[1] = x_axis;
		tx_buff[2] = up;
		tx_buff[3] = down;
		tx_buff[4] = left;
		tx_buff[5] = right;

		MSS_UART_polled_tx(&g_mss_uart1, tx_buff, sizeof(tx_buff));

		//printf("Controller Data: %" PRIu32 "\n",controller_buff);

	}

	return 0;
}
