/*
 * IRcontrol.c
 *
 *  Created on: Apr 15, 2017
 *      Author: baldeeb
 */

#include "IRcontrol.h"

void init_ir_control(void){
	int i;

	ACE_init();

	/* DAC initialization */
	ACE_configure_sdd(
		SDD1_OUT,
		SDD_8_BITS,
		SDD_VOLTAGE_MODE | SDD_RETURN_TO_ZERO,
		INDIVIDUAL_UPDATE
	);
	ACE_enable_sdd(SDD1_OUT);

    /* handler for ADC channel */
    adc_handler_f = ACE_get_channel_handle((const uint8_t *)"ADCDirectInput_0");
    adc_handler_b = ACE_get_channel_handle((const uint8_t *)"ADCDirectInput_1");

    for(i = 0; i < IR_SAMPLE_COUNT; i++){
    	ir_samples[i] = 0;
    }
    sample_index = 0;
}

//update ir_samples and average result
void ir_process_data( void ){

	int i;
    uint16_t adc_data_f = 0;
    uint16_t adc_data_b = 0;

	ir_front_samples[sample_index] = ir_right_samples[i];
	ir_bad_samples[sample_index] = ir_left_samples[i];


	adc_data_f = ACE_get_ppe_sample(adc_handler_f);
	adc_data_b = ACE_get_ppe_sample(adc_handler_b);

}


//check IR sensor and test if the master bot is turing. Find the turning direction and difference in the reading of 2 IR_sensors
int ir_read(int * dir)
{
    uint16_t adc_data_f = 0;
    uint16_t adc_data_b = 0;

	adc_data_f = ACE_get_ppe_sample(adc_handler_f);
	adc_data_b = ACE_get_ppe_sample(adc_handler_b);
//	printf("adc_data_f: %i\r\n", adc_data_f);
//	printf("adc_data_b: %i\r\n\n", adc_data_b);


	//
	if(adc_data_f < IR_LOWER_LIMIT || adc_data_b < IR_LOWER_LIMIT){
		*dir = 0;
	    return 0;
	}

	//turning right, dir = 2
	if((adc_data_f > adc_data_b) && ((adc_data_f - adc_data_b) > IR_TOLERANCE))
	{
		*dir = 2;
		return adc_data_f - adc_data_b;
	}
	//turning left, dir = 1
	else if((adc_data_f < adc_data_b) && ((adc_data_b - adc_data_f) > IR_TOLERANCE))
	{
		*dir = 1;
		return adc_data_b - adc_data_f;
	}
	//return 0 if it's not turning
	*dir = 0;
    return 0;
}
